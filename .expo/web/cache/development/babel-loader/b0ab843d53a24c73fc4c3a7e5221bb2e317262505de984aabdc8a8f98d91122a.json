{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getAuth, initializeAuth, GoogleAuthProvider, indexedDBLocalPersistence, signInWithPopup, signInWithCredential, signInWithEmailAndPassword, signInAnonymously, signOut } from 'firebase/auth';\nimport { getFirestore, collection, query, where, onSnapshot, getDoc } from 'firebase/firestore';\nimport { getStorage } from 'firebase/storage';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nvar firebaseConfig = {\n  apiKey: \"AIzaSyD38C-wyEziutHYrQG4rFatW-9Z5In37Ss\",\n  authDomain: \"criptax-8d87d.firebaseapp.com\",\n  projectId: \"criptax-8d87d\",\n  storageBucket: \"criptax-8d87d.appspot.com\",\n  messagingSenderId: \"693837443791\",\n  appId: \"1:693837443791:web:c3d93b462cc82458e6bdba\",\n  measurementId: \"G-YNX6MZDC7K\",\n  databaseURL: \"https://criptax-8d87d-default-rtdb.europe-west1.firebasedatabase.app/\"\n};\nvar app = initializeApp(firebaseConfig);\nvar auth;\nif (Platform.OS === 'web') {\n  auth = getAuth(app);\n} else {\n  auth = initializeAuth(app, {\n    persistence: indexedDBLocalPersistence\n  });\n}\nvar db = getFirestore(app);\nvar storage = getStorage(app);\nexport { app, auth, db, storage, collection, query, where, onSnapshot, getDoc, GoogleAuthProvider, signInWithPopup, signInWithCredential, signInWithEmailAndPassword, signInAnonymously, signOut };","map":{"version":3,"names":["initializeApp","getAuth","initializeAuth","GoogleAuthProvider","indexedDBLocalPersistence","signInWithPopup","signInWithCredential","signInWithEmailAndPassword","signInAnonymously","signOut","getFirestore","collection","query","where","onSnapshot","getDoc","getStorage","Platform","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","databaseURL","app","auth","OS","persistence","db","storage"],"sources":["C:/Users/Trubax/Desktop/CriptX ghit/beta/project native bolt/src/config/firebase.ts"],"sourcesContent":["import { initializeApp } from 'firebase/app';\nimport { \n  getAuth, \n  initializeAuth,\n  GoogleAuthProvider,\n  browserLocalPersistence,\n  indexedDBLocalPersistence,\n  signInWithPopup,\n  signInWithCredential,\n  signInWithEmailAndPassword,\n  signInAnonymously,\n  signOut\n} from 'firebase/auth';\nimport { getFirestore, collection, query, where, onSnapshot, getDoc } from 'firebase/firestore';\nimport { getStorage } from 'firebase/storage';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { Platform } from 'react-native';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyD38C-wyEziutHYrQG4rFatW-9Z5In37Ss\",\n  authDomain: \"criptax-8d87d.firebaseapp.com\",\n  projectId: \"criptax-8d87d\",\n  storageBucket: \"criptax-8d87d.appspot.com\",\n  messagingSenderId: \"693837443791\",\n  appId: \"1:693837443791:web:c3d93b462cc82458e6bdba\",\n  measurementId: \"G-YNX6MZDC7K\",\n  databaseURL: \"https://criptax-8d87d-default-rtdb.europe-west1.firebasedatabase.app/\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\n// Initialize Auth based on platform\nlet auth;\nif (Platform.OS === 'web') {\n  auth = getAuth(app);\n} else {\n  auth = initializeAuth(app, {\n    persistence: indexedDBLocalPersistence\n  });\n}\n\n// Initialize Firestore\nconst db = getFirestore(app);\n\n// Initialize Storage\nconst storage = getStorage(app);\n\nexport { \n  app, \n  auth, \n  db, \n  storage,\n  collection,\n  query,\n  where,\n  onSnapshot,\n  getDoc,\n  GoogleAuthProvider,\n  signInWithPopup,\n  signInWithCredential,\n  signInWithEmailAndPassword,\n  signInAnonymously,\n  signOut\n};\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SACEC,OAAO,EACPC,cAAc,EACdC,kBAAkB,EAElBC,yBAAyB,EACzBC,eAAe,EACfC,oBAAoB,EACpBC,0BAA0B,EAC1BC,iBAAiB,EACjBC,OAAO,QACF,eAAe;AACtB,SAASC,YAAY,EAAEC,UAAU,EAAEC,KAAK,EAAEC,KAAK,EAAEC,UAAU,EAAEC,MAAM,QAAQ,oBAAoB;AAC/F,SAASC,UAAU,QAAQ,kBAAkB;AAAC,OAAAC,QAAA;AAI9C,IAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,+BAA+B;EAC3CC,SAAS,EAAE,eAAe;EAC1BC,aAAa,EAAE,2BAA2B;EAC1CC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE,2CAA2C;EAClDC,aAAa,EAAE,cAAc;EAC7BC,WAAW,EAAE;AACf,CAAC;AAGD,IAAMC,GAAG,GAAG3B,aAAa,CAACkB,cAAc,CAAC;AAGzC,IAAIU,IAAI;AACR,IAAIX,QAAQ,CAACY,EAAE,KAAK,KAAK,EAAE;EACzBD,IAAI,GAAG3B,OAAO,CAAC0B,GAAG,CAAC;AACrB,CAAC,MAAM;EACLC,IAAI,GAAG1B,cAAc,CAACyB,GAAG,EAAE;IACzBG,WAAW,EAAE1B;EACf,CAAC,CAAC;AACJ;AAGA,IAAM2B,EAAE,GAAGrB,YAAY,CAACiB,GAAG,CAAC;AAG5B,IAAMK,OAAO,GAAGhB,UAAU,CAACW,GAAG,CAAC;AAE/B,SACEA,GAAG,EACHC,IAAI,EACJG,EAAE,EACFC,OAAO,EACPrB,UAAU,EACVC,KAAK,EACLC,KAAK,EACLC,UAAU,EACVC,MAAM,EACNZ,kBAAkB,EAClBE,eAAe,EACfC,oBAAoB,EACpBC,0BAA0B,EAC1BC,iBAAiB,EACjBC,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}