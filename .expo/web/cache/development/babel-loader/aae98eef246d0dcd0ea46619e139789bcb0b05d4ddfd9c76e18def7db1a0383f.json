{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport { auth, GoogleAuthProvider, signInWithPopup, signInWithEmailAndPassword as _signInWithEmailAndPassword, signInAnonymously as _signInAnonymously, signOut as firebaseSignOut } from \"../config/firebase\";\nvar AuthService = function () {\n  function AuthService() {\n    _classCallCheck(this, AuthService);\n    this.webClientId = '693837443791-b3g7l5rj77vt4p5fk7v1l9ra2c8g1m8q.apps.googleusercontent.com';\n  }\n  return _createClass(AuthService, [{\n    key: \"signInWithGoogle\",\n    value: function () {\n      var _signInWithGoogle = _asyncToGenerator(function* () {\n        try {\n          var provider = new GoogleAuthProvider();\n          provider.addScope('profile');\n          provider.addScope('email');\n          return yield signInWithPopup(auth, provider);\n        } catch (error) {\n          console.error('Google Sign In Error:', error);\n          throw new Error(error.message || 'Errore durante il login con Google');\n        }\n      });\n      function signInWithGoogle() {\n        return _signInWithGoogle.apply(this, arguments);\n      }\n      return signInWithGoogle;\n    }()\n  }, {\n    key: \"signInWithEmailAndPassword\",\n    value: function () {\n      var _signInWithEmailAndPassword2 = _asyncToGenerator(function* (email, password) {\n        try {\n          return yield _signInWithEmailAndPassword(auth, email, password);\n        } catch (error) {\n          throw new Error(error.message || 'Errore durante il login con email e password');\n        }\n      });\n      function signInWithEmailAndPassword(_x, _x2) {\n        return _signInWithEmailAndPassword2.apply(this, arguments);\n      }\n      return signInWithEmailAndPassword;\n    }()\n  }, {\n    key: \"signInAnonymously\",\n    value: function () {\n      var _signInAnonymously2 = _asyncToGenerator(function* () {\n        try {\n          return yield _signInAnonymously(auth);\n        } catch (error) {\n          throw new Error(error.message || 'Errore durante il login anonimo');\n        }\n      });\n      function signInAnonymously() {\n        return _signInAnonymously2.apply(this, arguments);\n      }\n      return signInAnonymously;\n    }()\n  }, {\n    key: \"signOut\",\n    value: function () {\n      var _signOut = _asyncToGenerator(function* () {\n        try {\n          yield firebaseSignOut(auth);\n        } catch (error) {\n          throw new Error(error.message || 'Errore durante il logout');\n        }\n      });\n      function signOut() {\n        return _signOut.apply(this, arguments);\n      }\n      return signOut;\n    }()\n  }], [{\n    key: \"getInstance\",\n    value: function getInstance() {\n      if (!AuthService.instance) {\n        AuthService.instance = new AuthService();\n      }\n      return AuthService.instance;\n    }\n  }]);\n}();\nexport default AuthService;","map":{"version":3,"names":["auth","GoogleAuthProvider","signInWithPopup","signInWithEmailAndPassword","signInAnonymously","signOut","firebaseSignOut","AuthService","_classCallCheck","webClientId","_createClass","key","value","_signInWithGoogle","_asyncToGenerator","provider","addScope","error","console","Error","message","signInWithGoogle","apply","arguments","_signInWithEmailAndPassword2","email","password","_x","_x2","_signInAnonymously2","_signOut","getInstance","instance"],"sources":["C:/Users/Trubax/Desktop/CriptX ghit/beta/project native bolt/src/services/AuthService.ts"],"sourcesContent":["import { Platform } from 'react-native';\nimport { \n  auth, \n  GoogleAuthProvider, \n  signInWithPopup,\n  signInWithEmailAndPassword,\n  signInAnonymously,\n  signOut as firebaseSignOut\n} from '../config/firebase';\n\nclass AuthService {\n  private static instance: AuthService;\n  private webClientId = '693837443791-b3g7l5rj77vt4p5fk7v1l9ra2c8g1m8q.apps.googleusercontent.com';\n\n  private constructor() {}\n\n  public static getInstance(): AuthService {\n    if (!AuthService.instance) {\n      AuthService.instance = new AuthService();\n    }\n    return AuthService.instance;\n  }\n\n  async signInWithGoogle() {\n    try {\n      const provider = new GoogleAuthProvider();\n      provider.addScope('profile');\n      provider.addScope('email');\n      return await signInWithPopup(auth, provider);\n    } catch (error: any) {\n      console.error('Google Sign In Error:', error);\n      throw new Error(error.message || 'Errore durante il login con Google');\n    }\n  }\n\n  async signInWithEmailAndPassword(email: string, password: string) {\n    try {\n      return await signInWithEmailAndPassword(auth, email, password);\n    } catch (error: any) {\n      throw new Error(error.message || 'Errore durante il login con email e password');\n    }\n  }\n\n  async signInAnonymously() {\n    try {\n      return await signInAnonymously(auth);\n    } catch (error: any) {\n      throw new Error(error.message || 'Errore durante il login anonimo');\n    }\n  }\n\n  async signOut() {\n    try {\n      await firebaseSignOut(auth);\n    } catch (error: any) {\n      throw new Error(error.message || 'Errore durante il logout');\n    }\n  }\n}\n\nexport default AuthService;\n"],"mappings":";;;AACA,SACEA,IAAI,EACJC,kBAAkB,EAClBC,eAAe,EACfC,0BAA0B,IAA1BA,2BAA0B,EAC1BC,iBAAiB,IAAjBA,kBAAiB,EACjBC,OAAO,IAAIC,eAAe;AACA,IAEtBC,WAAW;EAIf,SAAAA,YAAA,EAAsB;IAAAC,eAAA,OAAAD,WAAA;IAAA,KAFdE,WAAW,GAAG,0EAA0E;EAEzE;EAAC,OAAAC,YAAA,CAAAH,WAAA;IAAAI,GAAA;IAAAC,KAAA;MAAA,IAAAC,iBAAA,GAAAC,iBAAA,CASxB,aAAyB;QACvB,IAAI;UACF,IAAMC,QAAQ,GAAG,IAAId,kBAAkB,CAAC,CAAC;UACzCc,QAAQ,CAACC,QAAQ,CAAC,SAAS,CAAC;UAC5BD,QAAQ,CAACC,QAAQ,CAAC,OAAO,CAAC;UAC1B,aAAad,eAAe,CAACF,IAAI,EAAEe,QAAQ,CAAC;QAC9C,CAAC,CAAC,OAAOE,KAAU,EAAE;UACnBC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;UAC7C,MAAM,IAAIE,KAAK,CAACF,KAAK,CAACG,OAAO,IAAI,oCAAoC,CAAC;QACxE;MACF,CAAC;MAAA,SAVKC,gBAAgBA,CAAA;QAAA,OAAAR,iBAAA,CAAAS,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAhBF,gBAAgB;IAAA;EAAA;IAAAV,GAAA;IAAAC,KAAA;MAAA,IAAAY,4BAAA,GAAAV,iBAAA,CAYtB,WAAiCW,KAAa,EAAEC,QAAgB,EAAE;QAChE,IAAI;UACF,aAAavB,2BAA0B,CAACH,IAAI,EAAEyB,KAAK,EAAEC,QAAQ,CAAC;QAChE,CAAC,CAAC,OAAOT,KAAU,EAAE;UACnB,MAAM,IAAIE,KAAK,CAACF,KAAK,CAACG,OAAO,IAAI,8CAA8C,CAAC;QAClF;MACF,CAAC;MAAA,SANKjB,0BAA0BA,CAAAwB,EAAA,EAAAC,GAAA;QAAA,OAAAJ,4BAAA,CAAAF,KAAA,OAAAC,SAAA;MAAA;MAAA,OAA1BpB,0BAA0B;IAAA;EAAA;IAAAQ,GAAA;IAAAC,KAAA;MAAA,IAAAiB,mBAAA,GAAAf,iBAAA,CAQhC,aAA0B;QACxB,IAAI;UACF,aAAaV,kBAAiB,CAACJ,IAAI,CAAC;QACtC,CAAC,CAAC,OAAOiB,KAAU,EAAE;UACnB,MAAM,IAAIE,KAAK,CAACF,KAAK,CAACG,OAAO,IAAI,iCAAiC,CAAC;QACrE;MACF,CAAC;MAAA,SANKhB,iBAAiBA,CAAA;QAAA,OAAAyB,mBAAA,CAAAP,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAjBnB,iBAAiB;IAAA;EAAA;IAAAO,GAAA;IAAAC,KAAA;MAAA,IAAAkB,QAAA,GAAAhB,iBAAA,CAQvB,aAAgB;QACd,IAAI;UACF,MAAMR,eAAe,CAACN,IAAI,CAAC;QAC7B,CAAC,CAAC,OAAOiB,KAAU,EAAE;UACnB,MAAM,IAAIE,KAAK,CAACF,KAAK,CAACG,OAAO,IAAI,0BAA0B,CAAC;QAC9D;MACF,CAAC;MAAA,SANKf,OAAOA,CAAA;QAAA,OAAAyB,QAAA,CAAAR,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAPlB,OAAO;IAAA;EAAA;IAAAM,GAAA;IAAAC,KAAA,EAnCb,SAAcmB,WAAWA,CAAA,EAAgB;MACvC,IAAI,CAACxB,WAAW,CAACyB,QAAQ,EAAE;QACzBzB,WAAW,CAACyB,QAAQ,GAAG,IAAIzB,WAAW,CAAC,CAAC;MAC1C;MACA,OAAOA,WAAW,CAACyB,QAAQ;IAC7B;EAAC;AAAA;AAuCH,eAAezB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}